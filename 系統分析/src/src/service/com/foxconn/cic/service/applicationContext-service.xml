<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">

    <aop:config proxy-target-class="true">
    
	   	<aop:advisor id="userActivityNews" advice-ref="userActivityNewsAdvice" pointcut="execution(* *..service.NewsWebService.getNews(..)) || execution(* *..service.NewsWebService.search(..))" order="0"/>
	   	<aop:advisor id="userActivityNews2" advice-ref="userActivityNewsAdvice" pointcut="execution(* *..service.NewsFacade.*(..))" order="1"/>
    	<aop:advisor id="userActivityPrice" advice-ref="userActivityPriceAdvice" pointcut="execution(* *..service.PriceWebService.getPrice(..)) || execution(* *..service.PriceWebService.search(..))" order="2"/>
    	<aop:advisor id="userActivityExchangeRate" advice-ref="userActivityExchangeRateAdvice" pointcut="execution(* *..service.ExchangeRateWebService.getExchangeRate(..)) || execution(* *..service.ExchangeRateWebService.search(..))" order="3"/>
    	<aop:advisor id="userActivityInterestRate" advice-ref="userActivityInterestRateAdvice" pointcut="execution(* *..service.InterestRateWebService.getInterestRate(..)) || execution(* *..service.InterestRateWebService.search(..))" order="4"/>
        
        <aop:advisor id="userManagerTx" advice-ref="userManagerTxAdvice" pointcut="execution(* *..service.UserManager.*(..))" order="5"/>
        <aop:advisor id="userManagerSecurity" advice-ref="userSecurityAdvice" pointcut="execution(* *..service.UserManager.saveUser(..))" order="6"/>
        <aop:advisor id="managerTx" advice-ref="txAdvice" pointcut="execution(* *..service.*Manager.*(..))" order="7"/>
       	 
       	 <!--
       	<aop:advisor id="userManagerTx" advice-ref="userManagerTxAdvice" pointcut="execution(* *..service.UserManager.*(..))" order="0"/>
        <aop:advisor id="userManagerSecurity" advice-ref="userSecurityAdvice" pointcut="execution(* *..service.UserManager.saveUser(..))" order="1"/>
        <aop:advisor id="managerTx" advice-ref="txAdvice" pointcut="execution(* *..service.*Manager.*(..))" order="2"/>
        -->
    </aop:config>
    <!-- Enable @Transactional support -->
    <tx:annotation-driven />

    <!-- Enable @AspectJ support -->
    <aop:aspectj-autoproxy/>

    <tx:advice id="txAdvice">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <tx:advice id="userManagerTxAdvice">
        <tx:attributes>
            <tx:method name="save*" rollback-for="UserExistsException"/>
        </tx:attributes>
    </tx:advice>

    <bean id="lookupManager" class="com.foxconn.cic.service.impl.LookupManagerImpl">
        <property name="lookupDao" ref="lookupDao"/>
    </bean>

    <bean id="manager" class="com.foxconn.cic.service.impl.BaseManager">
        <property name="dao" ref="dao"/>
    </bean>

    <bean id="userManager" class="com.foxconn.cic.service.impl.UserManagerImpl">
        <property name="userDao" ref="userDao"/>
    </bean>

    <bean id="userSecurityAdvice" class="com.foxconn.cic.service.UserSecurityAdvice">
        <property name="userCache" ref="userCache"/>
    </bean>

    <bean id="userCache" class="org.acegisecurity.providers.dao.cache.EhCacheBasedUserCache">
        <property name="cache">
            <bean class="org.springframework.cache.ehcache.EhCacheFactoryBean">
                <property name="cacheManager">
                    <bean class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>
                </property>
                <property name="cacheName" value="userCache"/>
            </bean>
        </property>
    </bean>
	
	<bean id="userActivityNewsAdvice" class="com.foxconn.cic.service.advice.NewsAdvice">
		<property name="userActivityLogManager" ref="userActivityLogManager"></property>
    </bean>
    <bean id="userActivityPriceAdvice" class="com.foxconn.cic.service.advice.PriceAdvice">
		<property name="userActivityLogManager" ref="userActivityLogManager"></property>
    </bean>
    <bean id="userActivityExchangeRateAdvice" class="com.foxconn.cic.service.advice.ExchangeRateAdvice">
		<property name="userActivityLogManager" ref="userActivityLogManager"></property>
    </bean>
    <bean id="userActivityInterestRateAdvice" class="com.foxconn.cic.service.advice.InterestRateAdvice">
		<property name="userActivityLogManager" ref="userActivityLogManager"></property>
    </bean>
    
    <bean id="roleManager" class="com.foxconn.cic.service.impl.RoleManagerImpl">
        <property name="roleDao" ref="roleDao"/>
    </bean>

    <bean id="mailEngine" class="com.foxconn.cic.service.MailEngine">
        <property name="mailSender" ref="mailSender"/>
        <property name="velocityEngine" ref="velocityEngine"/>
    </bean>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${mail.host}"/>
        <property name="username" value="${mail.username}"/>
        <property name="password" value="${mail.password}"/>
    </bean>

    <!-- Configure Velocity for sending e-mail -->
    <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <property name="velocityProperties">
            <props>
                <prop key="resource.loader">class</prop>
                <prop key="class.resource.loader.class">
                    org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
                </prop>
                <prop key="velocimacro.library"></prop>
            </props>
        </property>
    </bean>

    <bean id="mailMessage" class="org.springframework.mail.SimpleMailMessage" scope="prototype">
        <property name="from" value="${mail.default.from}"/>
    </bean>

	<!-- COMPASS START -->
	<bean id="compass" class="org.compass.spring.LocalCompassBean">
		<property name="classMappings">
            <list>
            	<value>com.foxconn.cic.model.InterestRate</value>        
                <value>com.foxconn.cic.model.NewsImage</value>
                <value>com.foxconn.cic.model.Price</value>                
                <value>com.foxconn.cic.model.ExchangeRate</value>        
            </list>
        </property> 		
		<property name="resourceLocations">
			<list>
				<value>classpath:com/foxconn/cic/model/News.cpm.xml</value>
				<value>classpath:com/foxconn/cic/model/Website.cpm.xml</value>
				<value>classpath:com/foxconn/cic/model/Material.cpm.xml</value>
			</list>
		</property>
		<property name="compassSettings">
			<props>
				<prop key="compass.engine.connection">
					file://D:/FoxconnCIC/
				</prop>
				<prop key="compass.transaction.factory">
					org.compass.spring.transaction.SpringSyncTransactionFactory
				</prop>
				<prop key="compass.engine.mergeFactor">
					100
				</prop>
				<prop key="compass.engine.maxBufferedDocs">
					100
				</prop>
				<!--
				<prop key="compass.engine.store.wrapper.test.type">
					org.compass.core.lucene.engine.store.wrapper.SyncMemoryMirrorDirectoryWrapperProvider
				</prop>
				 -->
				<prop key="compass.engine.analyzer.default.type">
					org.apache.lucene.analysis.standard.StandardAnalyzer
				</prop>
				<prop key="compass.engine.analyzer.search.type">
					org.apache.lucene.analysis.standard.StandardAnalyzer
				</prop>
				<prop key="compass.engine.analyzer.keyword.type">
					org.apache.lucene.analysis.KeywordAnalyzer
				</prop>
				<prop key="compass.engine.highlighter.default.textTokenizer">
					auto
				</prop>
				<prop key="compass.converter.html.type">
					com.foxconn.cic.util.HTMLConverter
				</prop>
				<prop key="compass.engine.highlighter.default.formatter.simple.pre">
					<![CDATA[<font color="red"><b>]]>
				</prop>
				<prop key="compass.engine.highlighter.default.formatter.simple.post">
					<![CDATA[</b></font>]]>
				</prop>
			</props>
		</property>
		<property name="transactionManager" ref="transactionManager" />
	</bean>
	<bean id="compass2" class="org.compass.spring.LocalCompassBean">
		<property name="resourceLocations">
			<list>
				<value>classpath:com/foxconn/cic/model/WebsiteRoot.cpm.xml</value>
				<value>classpath:com/foxconn/cic/model/WebsiteRootParent.cpm.xml</value>
			</list>
		</property>
		<property name="compassSettings">
			<props>
				<prop key="compass.engine.connection">
					file://D:/FoxconnCIC_Meta/
				</prop>
				<prop key="compass.transaction.factory">
					org.compass.spring.transaction.SpringSyncTransactionFactory
				</prop>
				<prop key="compass.engine.mergeFactor">
					100
				</prop>
				<prop key="compass.engine.maxBufferedDocs">
					100
				</prop>
				<prop key="compass.engine.analyzer.default.type">
					org.apache.lucene.analysis.standard.StandardAnalyzer
				</prop>
				<prop key="compass.engine.analyzer.search.type">
					org.apache.lucene.analysis.standard.StandardAnalyzer
				</prop>
			</props>
		</property>
		<property name="transactionManager" ref="transactionManager" />
	</bean>
	<bean id="hibernateGpsDevice"
		class="org.compass.spring.device.hibernate.dep.SpringHibernate3GpsDevice">
		<property name="name">
			<value>hibernateDevice</value>
		</property>
		<property name="sessionFactory" ref="sessionFactory" />

	</bean>
	<bean id="hibernateGpsDevice2"
		class="org.compass.spring.device.hibernate.dep.SpringHibernate3GpsDevice">
		<property name="name">
			<value>hibernateDevice</value>
		</property>
		<property name="sessionFactory" ref="sessionFactory" />

	</bean>
	<bean id="compassGps" class="org.compass.gps.impl.SingleCompassGps"
		init-method="start" destroy-method="stop">
		<property name="compass">
			<ref bean="compass" />
		</property>
		<property name="gpsDevices">
			<list>
				<bean
					class="org.compass.spring.device.SpringSyncTransactionGpsDeviceWrapper">
					<property name="gpsDevice" ref="hibernateGpsDevice" />
				</bean>
			</list>
		</property>
	</bean>
	<bean id="compassGps2" class="org.compass.gps.impl.SingleCompassGps"
		init-method="start" destroy-method="stop">
		<property name="compass">
			<ref bean="compass2" />
		</property>
		<property name="gpsDevices">
			<list>
				<bean
					class="org.compass.spring.device.SpringSyncTransactionGpsDeviceWrapper">
					<property name="gpsDevice" ref="hibernateGpsDevice2" />
				</bean>
			</list>
		</property>
	</bean>
	<bean id="websiteSearchHelper" class="com.foxconn.cic.service.impl.AdvancedSearchHelper" >
    	<constructor-arg index="0" ref="compass2"></constructor-arg>
    	<constructor-arg index="1" value="20"></constructor-arg>
    	<property name="aliases">
    		<list>
    			<value>website</value>
    		</list>
    	</property>
    </bean>
	<bean id="newsSearchHelper" class="com.foxconn.cic.service.impl.AdvancedSearchHelper" >
    	<constructor-arg index="0" ref="compass"></constructor-arg>
    	<constructor-arg index="1" value="20"></constructor-arg>
    	<property name="aliases">
    		<list>
    			<value>news</value>
    		</list>
    	</property>
    	<property name="highlightFields">
    		<list>
    			<value>title</value>
    			<value>content</value>
    		</list>
    	</property>
    </bean>
    <bean id="priceSearchHelper" class="com.foxconn.cic.service.impl.AdvancedSearchHelper" >
    	<constructor-arg index="0" ref="compass"></constructor-arg>
    	<constructor-arg index="1" value="20"></constructor-arg>
    	<property name="aliases">
    		<list>
    			<value>price</value>
    		</list>
    	</property>
    </bean>
    <bean id="exchangeRateSearchHelper" class="com.foxconn.cic.service.impl.AdvancedSearchHelper" >
    	<constructor-arg index="0" ref="compass"></constructor-arg>
    	<constructor-arg index="1" value="20"></constructor-arg>
    	<property name="aliases">
    		<list>
    			<value>exchangerate</value>
    		</list>
    	</property>
    </bean>
    <bean id="interestRateSearchHelper" class="com.foxconn.cic.service.impl.AdvancedSearchHelper" >
    	<constructor-arg index="0" ref="compass"></constructor-arg>
    	<constructor-arg index="1" value="20"></constructor-arg>
    	<property name="aliases">
    		<list>
    			<value>interestrate</value>
    		</list>
    	</property>
    </bean>
	<!-- COMPASS END -->

	<!-- Spring HTTP Invoker for client  �� �� -->
	<bean id="httpNewsManager" class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter">
		<property name="service" ref="newsManager"/>
		<property name="serviceInterface" value="com.foxconn.cic.service.NewsManager"/>
	</bean>
	<bean id="httpNewsImageManager" class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter">
		<property name="service" ref="newsImageManager"/>
		<property name="serviceInterface" value="com.foxconn.cic.service.NewsImageManager"/>
	</bean>
	<bean id="httpNewsImageHelper" class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter">
		<property name="service" ref="newsImageHelper"/>
		<property name="serviceInterface" value="com.foxconn.cic.service.NewsImageHelper"/>
	</bean>
	<bean id="httpWebsiteManager" class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter">
		<property name="service" ref="websiteManager"/>
		<property name="serviceInterface" value="com.foxconn.cic.service.WebsiteManager"/>
	</bean>
	<bean id="httpKeywordManager" class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter">
		<property name="service" ref="keywordManager"/>
		<property name="serviceInterface" value="com.foxconn.cic.service.KeywordManager"/>
	</bean>
	<bean id="httpPriceManager" class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter">
		<property name="service" ref="priceManager"/>
		<property name="serviceInterface" value="com.foxconn.cic.service.PriceManager"/>
	</bean>
	<bean id="httpExchangeRateManager" class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter">
		<property name="service" ref="exchangeRateManager"/>
		<property name="serviceInterface" value="com.foxconn.cic.service.ExchangeRateManager"/>
	</bean>
	<bean id="httpInterestRateManager" class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter">
		<property name="service" ref="interestRateManager"/>
		<property name="serviceInterface" value="com.foxconn.cic.service.InterestRateManager"/>
	</bean>
    <!-- Add new Managers here -->






    <!--Keyword-START-->
    <bean id="keywordManager" class="com.foxconn.cic.service.impl.KeywordManagerImpl">
        <property name="keywordDao" ref="keywordDao"/>
    </bean>
    <!--Keyword-END-->
    <!--Catalog-START-->
    <bean id="catalogManager" class="com.foxconn.cic.service.impl.CatalogManagerImpl">
        <property name="catalogDao" ref="catalogDao"/>
    </bean>
    <!--Catalog-END-->
    <!--CatalogType-START-->
    <bean id="catalogTypeManager" class="com.foxconn.cic.service.impl.CatalogTypeManagerImpl">
        <property name="catalogTypeDao" ref="catalogTypeDao"/>
    </bean>
    <!--CatalogType-END-->
    <!--News-START-->
    <bean id="imageTagUrlModifyingVisitor" class="com.foxconn.cic.util.ImageTagUrlModifyingVisitor">
    	<constructor-arg index="0" value="{$"/>
    	<constructor-arg index="1" value="}"/>
    </bean>

    <bean id="imageTagUrlRestoreWithIDVisitor" class="com.foxconn.cic.util.ImageTagUrlRestoreVisitor">
    	<constructor-arg index="0" value="{$"/>
    	<constructor-arg index="1" value="}"/>
    	<property name="propertyName" value="id"/>
    </bean>

    <bean id="imageTagUrlRestoreWithFilePathVisitor" class="com.foxconn.cic.util.ImageTagUrlRestoreVisitor">
    	<constructor-arg index="0" value="{$"/>
    	<constructor-arg index="1" value="}"/>
    	<property name="propertyName" value="filePath"/>
    </bean>

    <bean id="imageTagHelper" class="com.foxconn.cic.util.ImageTagHelper">
    	<property name="modify" ref="imageTagUrlModifyingVisitor"/>
    	<property name="restore" ref="imageTagUrlRestoreWithIDVisitor"/>
    	<property name="restoreWithFilePath" ref="imageTagUrlRestoreWithFilePathVisitor"/>
    </bean>

    <bean id="newsManager" class="com.foxconn.cic.service.impl.NewsManagerImpl">
        <property name="newsDao" ref="newsDao"/>
        <property name="searchHelper" ref="newsSearchHelper"/>
        <property name="imageTagHelper" ref="imageTagHelper"/>
    </bean>
    <bean id="newsWebService" class="com.foxconn.cic.service.impl.NewsWebServiceImpl">
    	<property name="newsManager" ref="newsManager"/>
    	<property name="imageTagHelper" ref="imageTagHelper"/>
    </bean>
    <bean id="newsFacade" class="com.foxconn.cic.service.impl.NewsFacadeImpl"  autowire="byName"/>
    <!--News-END-->
    <!--Website-START-->
    <bean id="websiteManager" class="com.foxconn.cic.service.impl.WebsiteManagerImpl">
        <property name="websiteDao" ref="websiteDao"/>
        <property name="searchHelper" ref="websiteSearchHelper"/>
    </bean>
    <!--Website-END-->
    <!--NewsImage-START-->
    <bean id="newsImageManager" class="com.foxconn.cic.service.impl.NewsImageManagerImpl">
        <property name="newsImageDao" ref="newsImageDao"/>
        <property name="newsManager" ref="newsManager"/>
        <property name="filePath" ref="Ddrive"/>
        <property name="gt" value="10"/>
        <property name="lt" value="7200"/>
    </bean>
    <bean id="newsImageHelper" class="com.foxconn.cic.service.impl.NewsImageHelperImpl">
        <property name="newsImagemanager" ref="newsImageManager"/>
        <property name="newsManager" ref="newsManager"/>
    </bean>
    <!--NewsImage-END-->
    <!--IndexManage-START-->
    <bean id="indexManager" class="com.foxconn.cic.service.impl.IndexManagerImpl">
    	<property name="compass" ref="compass"/>
    	<property name="newsManager" ref="newsManager"/>
    </bean>
    <!--IndexManage-START-->
    <!--Material-START-->    
    <bean id="materialManager" class="com.foxconn.cic.service.impl.MaterialManagerImpl">
        <property name="materialDao" ref="materialDao"/>
    </bean>
    <!--Material-END-->
    <!--Price-START-->    
    <bean id="priceManager" class="com.foxconn.cic.service.impl.PriceManagerImpl">
        <property name="priceDao" ref="priceDao"/>
        <property name="searchHelper" ref="priceSearchHelper"/>
    </bean>
    <bean id="priceWebService" class="com.foxconn.cic.service.impl.PriceWebServiceImpl">
    	<property name="priceManager" ref="priceManager"/>
    </bean>
    <!--Price-END-->
    <!--ExchangeRate-START-->    
    <bean id="exchangeRateManager" class="com.foxconn.cic.service.impl.ExchangeRateManagerImpl">
        <property name="exchangeRateDao" ref="exchangeRateDao"/>
        <property name="searchHelper" ref="exchangeRateSearchHelper"/>
    </bean>
    <bean id="exchangeRateWebService" class="com.foxconn.cic.service.impl.ExchangeRateWebServiceImpl">
    	<property name="exchangeRateManager" ref="exchangeRateManager"/>
    </bean>
    <!--ExchangeRate-END-->
    <!--InterestRate-START-->    
    <bean id="interestRateManager" class="com.foxconn.cic.service.impl.InterestRateManagerImpl">
        <property name="interestRateDao" ref="interestRateDao"/>
        <property name="searchHelper" ref="interestRateSearchHelper"/>
    </bean>
    <bean id="interestRateWebService" class="com.foxconn.cic.service.impl.InterestRateWebServiceImpl">
    	<property name="interestRateManager" ref="interestRateManager"/>
    </bean>
    <!--InterestRate-END-->
    <!--UserActivityLog-START-->    
    <bean id="userActivityLogManager" class="com.foxconn.cic.service.impl.UserActivityLogManagerImpl">
        <property name="userActivityLogDao" ref="userActivityLogDao"/>
    </bean>
    <!--UserActivityLog-END-->
    
    
    <!--Quoter-START-->    
    <bean id="quoterManager" class="com.foxconn.cic.service.impl.QuoterManagerImpl">
        <property name="quoterDao" ref="quoterDao"/>
    </bean>
    <!--Quoter-END-->
</beans>




